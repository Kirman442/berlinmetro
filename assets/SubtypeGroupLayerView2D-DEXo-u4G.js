import{q as m,v as d,w as u,P as y,Y as h,bt as b}from"./index-NTpjkr2x.js";import c from"./FeatureLayerView2D-rrUshDM1.js";import"./definitions-W9C_P9Oo.js";import"./LayerView-q-DWhQSv.js";import"./Container-h9yr5WfL.js";import"./enums-8pc8f5Ge.js";import"./Texture-rkt9N1E1.js";import"./AttributeStoreView-sQ-PwFP-.js";import"./TiledDisplayObject-wq0GZP40.js";import"./color-2LtVwUGs.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./number-sTjsTbdA.js";import"./WGLContainer-w4G_9y_7.js";import"./FramebufferObject-I1OPz3Lz.js";import"./ProgramTemplate-QskX9BYu.js";import"./GeometryUtils-3EwCa8DB.js";import"./alignmentUtils-XT3TYmYW.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./earcut-EQhr15rW.js";import"./featureConversionUtils-fCaHEY-P.js";import"./OptimizedFeature-5RGb7-P9.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./OptimizedGeometry-CbNXANBG.js";import"./visualVariablesUtils-9WR9UpQU.js";import"./cimAnalyzer-H5DEMf3A.js";import"./fontUtils-wc3c5MaT.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-_JWRKMkP.js";import"./GeometryUtils-CEMOhUyj.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-dsDBQTDK.js";import"./floatRGBA-wMjPWqHR.js";import"./ExpandedCIM--HoSRnnA.js";import"./util-tJHSmGI1.js";import"./BitmapTileContainer-0tEqhgaA.js";import"./Bitmap-pnws-I2G.js";import"./TileContainer-Pny4fmz0.js";import"./CircularArray-1_thnT0U.js";import"./BufferPool--Im_7sLK.js";import"./FeatureContainer-1BzuYnW-.js";import"./popupUtils-FUzu3a45.js";import"./RefreshableLayerView-ebGVMXVn.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let n=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var a;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((a=this.tileRenderer)==null?void 0:a.updating),p=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${p}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),p}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};n=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],n);const ae=n;export{ae as default};
