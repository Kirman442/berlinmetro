import{b as w,c as y,y as I,d as V,e as v,j as H,m as o,n as c,o as T,q as n,t as g,v as q}from"./index-NTpjkr2x.js";import"./Container-h9yr5WfL.js";import"./BufferPool--Im_7sLK.js";import"./color-2LtVwUGs.js";import"./WGLContainer-w4G_9y_7.js";import"./enums-8pc8f5Ge.js";import"./Texture-rkt9N1E1.js";import"./ProgramTemplate-QskX9BYu.js";import"./definitions-W9C_P9Oo.js";import"./GeometryUtils-3EwCa8DB.js";import"./FramebufferObject-I1OPz3Lz.js";import"./number-sTjsTbdA.js";import"./StyleDefinition-ohiNeWtS.js";import"./enums-W_WZ2jKy.js";import"./MagnifierPrograms-g0BnTRhM.js";import"./OrderIndependentTransparency-JGZ_PxZN.js";import"./floatRGBA-wMjPWqHR.js";import"./testSVGPremultipliedAlpha-cFTnzN76.js";import{r as U}from"./GraphicsView2D-5AT161sh.js";import"./AttributeStoreView-sQ-PwFP-.js";import"./earcut-EQhr15rW.js";import"./featureConversionUtils-fCaHEY-P.js";import"./vec3f32-6rWBPTzX.js";import{r as b,o as f,n as d}from"./imageUtils-RlJrFdny.js";import{m as S,u as C}from"./LayerView-q-DWhQSv.js";import{a as Q}from"./HighlightGraphicContainer-o5DN_Lpz.js";import{a as $}from"./RefreshableLayerView-ebGVMXVn.js";import{S as P,G as k,r as F}from"./drapedUtils-_-NYgZ7P.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./config-z2KFXUcx.js";import"./OptimizedGeometry-CbNXANBG.js";import"./alignmentUtils-XT3TYmYW.js";import"./cimAnalyzer-H5DEMf3A.js";import"./fontUtils-wc3c5MaT.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-_JWRKMkP.js";import"./GeometryUtils-CEMOhUyj.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-dsDBQTDK.js";import"./Rasterizer-eHSYOERj.js";import"./rasterizingUtils-7nXX-KJC.js";import"./pbf-JHzimw0G.js";import"./imageutils-AnZGB9B8.js";import"./Matcher-crviAlzB.js";import"./visualVariablesUtils-9WR9UpQU.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-vnuyzA7V.js";import"./ExpandedCIM--HoSRnnA.js";import"./CircularArray-1_thnT0U.js";import"./throttle-SZpAiZ7F.js";import"./ComputedAttributeStorage-P7VodUxt.js";import"./OptimizedFeature-5RGb7-P9.js";import"./TimeOnly-UsIZJpTd.js";import"./basicInterfaces-IwaMq8O_.js";import"./normalizeUtilsSync-uxsMWUhW.js";import"./projectionSupport-wJ1SRjgc.js";import"./json-v6EOeNTY.js";import"./TiledDisplayObject-wq0GZP40.js";import"./util-tJHSmGI1.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./BitmapTileContainer-0tEqhgaA.js";import"./Bitmap-pnws-I2G.js";import"./TileContainer-Pny4fmz0.js";import"./BaseGraphicContainer-_-cLR5zB.js";import"./FeatureContainer-1BzuYnW-.js";import"./popupUtils-FUzu3a45.js";const G=[0,0];let a=class extends $(b(S(C))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var e;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(e=this._highlightView)==null||e.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,e=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,e==null?void 0:e.effectiveMinLOD,e==null?void 0:e.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,r)=>this.fetchTile(i,r)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),P(this,this.layer)){const i=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Q(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>F(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{i.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,e;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(e=this._highlightView)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,e):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):v()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return H((e=this.layer.tileInfo)==null?void 0:e.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(G,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i=this.tilemapCache,{signal:r,resamplingLevel:h=0}=e;if(!i)try{return await this._fetchImage(t,r)}catch(s){if(!o(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const u=new c(m),_=await this.fetchTile(u,{...e,resamplingLevel:h+1});return d(this._tileInfoView,_,u,t)}}throw s}const l=new c(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(t.level,t.row,t.col,l,{signal:r}),l.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(l,r)}catch(s){if(o(s))throw s;p=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,p,l,t):p}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){o(e)||T.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};n([g()],a.prototype,"resampling",null),n([g()],a.prototype,"tilemapCache",null),a=n([q("esri.views.2d.layers.TileLayerView2D")],a);const Nt=a;export{Nt as default};
