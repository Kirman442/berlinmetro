import{q as r,t as o,ez as g,v as m,dE as l,b as d,m as u,o as c,w as y}from"./index-NTpjkr2x.js";import{a as f}from"./BitmapContainer-FrnyjVB1.js";import{m as w,u as x}from"./LayerView-q-DWhQSv.js";import{r as v}from"./GraphicsView2D-5AT161sh.js";import{a as _}from"./HighlightGraphicContainer-o5DN_Lpz.js";import{v as H}from"./ExportStrategy-8i6CDCCK.js";import{a as I}from"./RefreshableLayerView-ebGVMXVn.js";import{G as V,r as P}from"./drapedUtils-_-NYgZ7P.js";import"./WGLContainer-w4G_9y_7.js";import"./definitions-W9C_P9Oo.js";import"./FramebufferObject-I1OPz3Lz.js";import"./Texture-rkt9N1E1.js";import"./enums-8pc8f5Ge.js";import"./ProgramTemplate-QskX9BYu.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./color-2LtVwUGs.js";import"./enums--FbEXJ87.js";import"./number-sTjsTbdA.js";import"./GeometryUtils-3EwCa8DB.js";import"./alignmentUtils-XT3TYmYW.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./Container-h9yr5WfL.js";import"./earcut-EQhr15rW.js";import"./featureConversionUtils-fCaHEY-P.js";import"./OptimizedFeature-5RGb7-P9.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./OptimizedGeometry-CbNXANBG.js";import"./cimAnalyzer-H5DEMf3A.js";import"./fontUtils-wc3c5MaT.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-_JWRKMkP.js";import"./GeometryUtils-CEMOhUyj.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-dsDBQTDK.js";import"./floatRGBA-wMjPWqHR.js";import"./normalizeUtilsSync-uxsMWUhW.js";import"./projectionSupport-wJ1SRjgc.js";import"./json-v6EOeNTY.js";import"./AttributeStoreView-sQ-PwFP-.js";import"./TiledDisplayObject-wq0GZP40.js";import"./visualVariablesUtils-9WR9UpQU.js";import"./ExpandedCIM--HoSRnnA.js";import"./util-tJHSmGI1.js";import"./Matcher-crviAlzB.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-vnuyzA7V.js";import"./ComputedAttributeStorage-P7VodUxt.js";import"./TimeOnly-UsIZJpTd.js";import"./BaseGraphicContainer-_-cLR5zB.js";import"./FeatureContainer-1BzuYnW-.js";import"./TileContainer-Pny4fmz0.js";import"./vec3f32-6rWBPTzX.js";import"./Bitmap-pnws-I2G.js";import"./popupUtils-FUzu3a45.js";const U=t=>{let e=class extends t{initialize(){this.exportImageParameters=new l({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"floors",null),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o()],e.prototype,"suspended",void 0),r([o(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends U(I(w(x))){constructor(){super(...arguments),this._highlightGraphics=new d,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{u(i)||c.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,a=i>=10.3,n=i>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>P(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:a,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(y(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,a){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}fetchImageBitmap(t,e,i,a){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],s.prototype,"strategy",void 0),r([o()],s.prototype,"updating",void 0),s=r([m("esri.views.2d.layers.MapImageLayerView2D")],s);const Et=s;export{Et as default};
